import{r as a,u as T,k as g,l as x,c as w,o as l,b as i,d as n,e,t as v,w as S,m as B,n as C}from"./index-cN5hl8tT.js";const R={key:0,class:"wrapper_create_task"},z=e("h2",{class:"task"},"TASK",-1),N={class:"input-field"},U=e("label",{for:"description"},"Description",-1),V={class:"character-counter",style:{float:"right","font-size":"12px"}},A=e("button",{class:"btn update",type:"submit"},"Update",-1),E={key:1},K={__name:"Task",setup(F){const c=a(null),u=a(null),s=a(""),_=a(null),r=a(null),o=T(),k=g(),d=x(),t=w(()=>o.getTasksById(Number(k.params.id))),h=()=>{_.value=M.Chips.init(c.value,{placeholder:"Task tags",data:t.value.tags})},m=()=>{r.value=M.Datepicker.init(u.value,{format:"dd.mm.yyyy",defaultDate:new Date(t.value.date),setDefaultDate:!0})},f=()=>s.value=t.value.description;setTimeout(()=>{M.updateTextFields()},0);const y=async()=>{o.updateTask({id:t.value.id,description:s.value,date:r.value.date}),d.push("/list")},b=()=>{o.completeTask(t.value.id),d.push("/list")};return l(h),l(m),l(f),(H,p)=>(i(),n("div",null,[t.value?(i(),n("div",R,[z,e("h3",null,v(t.value.title),1),e("form",{onSubmit:C(y,["prevent"])},[e("div",{class:"chips",ref_key:"chips",ref:c},null,512),e("div",N,[S(e("textarea",{"onUpdate:modelValue":p[0]||(p[0]=D=>s.value=D),id:"description",class:"materialize-textarea"},null,512),[[B,s.value]]),U,e("span",V,v(s.value.length)+"/2048",1)]),e("input",{type:"text",ref_key:"datepicker",ref:u},null,512),A,e("button",{class:"btn blue",onClick:b},"Complete task")],32)])):(i(),n("div",E,"task not found"))]))}};export{K as default};
